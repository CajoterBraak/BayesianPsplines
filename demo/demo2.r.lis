
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Bayesian P-splines using INLA, 2 dimensional
> # smooth + linear, smooth + smooth
> 
> # Simulate data
> n =  50 # 
> set.seed(2013)
> z = seq(0, 1, length = n)
> x = runif(n)
> x = x - mean(x)
> y0 = 5*x + sin(14 * z) 
> sd = 0.1
> y = y0 + rnorm(n) * sd
> 
> library(INLA)
Loading required package: sp
Loading required package: Matrix
Loading required package: splines
> library(BayesianPsplines)
> 
> # smooth(z)+smooth(x)
> mydata2 = mydata = data.frame(y = y, z= z, x = x)
> rs2 = smooth_inla(mydata2)
Note: method with signature 'CsparseMatrix#Matrix#missing#replValue' chosen for function '[<-',
 target signature 'dgCMatrix#lgeMatrix#missing#numeric'.
 "Matrix#ldenseMatrix#missing#replValue" would also be valid
y ~ -1 + f(idx0, model = "iid", hyper = hyper.fixed, constr = FALSE) + 
    f(idx1, model = "generic", Cmatrix = basisP[[1]]$P, constr = TRUE, 
        hyper = hyperB[[1]], diagonal = 1e-04) + f(idx2, model = "generic", 
    Cmatrix = basisP[[2]]$P, constr = TRUE, hyper = hyperB[[2]], 
    diagonal = 1e-04)
<environment: 0x0000000012e08590>
Note: method with signature 'TsparseMatrix#Matrix#missing#replValue' chosen for function '[<-',
 target signature 'dgTMatrix#ngCMatrix#missing#numeric'.
 "Matrix#nsparseMatrix#missing#replValue" would also be valid
> rs2$model # inla object 

Call:
c("inla(formula = formula.P, family = family, data = datalist, quantiles = quantiles, ",  "    offset = offset, verbose = verbose, lincomb = lc.grid, control.compute = contr.comp, ",  "    control.predictor = list(A = A.matrix, compute = TRUE, link = NULL), ",  "    control.family = list(hyper = list(prec = prior.observation.precision)))" )

Time used:
 Pre-processing    Running inla Post-processing           Total 
      0.9018259       1.1934471       0.2746420       2.3699150 

Integration Strategy: Central Composit Design

Model contains 3 hyperparameters
The model has no fixed effects and no intercept

Likelihood model: gaussian

The model has 3 random effects:
1.'idx0' is a IID model

2.'idx1' is a Generic0 model

3.'idx2' is a Generic0 model

> rs2$mod$summary.random$idx0 # intercept
  ID      mean        sd  0.05quant   0.5quant 0.95quant       mode
1  1 0.1005858 0.1626085 -0.1644028 0.09933311 0.3698394 0.09710689
           kld
1 5.526326e-12
> coef(rs2)  # intercept, B-spline coefs.
                     mean          sd    0.05quant     0.5quant    0.95quant
(Intercept)  0.1006110211 0.162576052 -0.163886919  0.099346884  0.369493132
1           -2.2410892274 1.588870880 -4.826225808 -2.253041895  0.385329895
2           -1.4527245070 0.763396593 -2.695709343 -1.458138954 -0.191092726
3           -0.6641168078 0.238060731 -1.054120125 -0.664668469 -0.272290675
4            0.1387430522 0.227296827 -0.239123922  0.141574634  0.506849368
5            0.9478789368 0.177465714  0.656970165  0.947539241  1.239876438
6            0.8011818842 0.192514921  0.480658071  0.803807956  1.112602794
7            0.2500602903 0.183227570 -0.050774821  0.250061414  0.550942805
8           -0.7859277074 0.185546450 -1.092857172 -0.784525775 -0.483826867
9           -1.3379015820 0.189322910 -1.651703935 -1.336163837 -1.030014978
10          -0.9305507475 0.183488726 -1.232465520 -0.930095451 -0.630196158
11          -0.2132414476 0.183841039 -0.516773395 -0.212264438  0.086937805
12           0.6102439398 0.184891887  0.303745583  0.611950996  0.910885451
13           1.1031060889 0.184802718  0.800691548  1.102526304  1.407492298
14           0.4476295326 0.187534726  0.135111559  0.450315078  0.750911432
15          -0.1676285174 0.183754834 -0.468773232 -0.167873132  0.134428079
16          -1.0060252606 0.184843368 -1.311765454 -1.004651200 -0.705048059
17          -1.3267246860 0.184156801 -1.631353639 -1.325418927 -1.026721581
18          -0.7224245051 0.184974288 -1.027663645 -0.721439360 -0.420474999
19           0.1404316014 0.178467833 -0.153449186  0.140895783  0.432720831
20           0.7105943137 0.222834998  0.341986486  0.712248602  1.073514279
21           1.3019575329 0.238320056  0.910443656  1.302026649  1.693248520
22           1.8996718342 0.761097821  0.654180879  1.897798141  3.151979221
23           2.4974103553 1.584558003 -0.093054416  2.492700772  5.104333189
24          -3.2530025638 0.034574273 -3.309593137 -3.253133021 -3.195973126
25          -2.9572751236 0.031476703 -3.008796665 -2.957393362 -2.905355105
26          -2.6615914394 0.028349186 -2.707992616 -2.661698531 -2.614829118
27          -2.3660501090 0.025190031 -2.407272748 -2.366149156 -2.324494056
28          -2.0700640918 0.022128841 -2.106287982 -2.070145600 -2.033563969
29          -1.7743858883 0.019116425 -1.805680430 -1.774455608 -1.742852903
30          -1.4785880254 0.016074260 -1.504908206 -1.478643879 -1.452075359
31          -1.1826534913 0.013079532 -1.204083079 -1.182692639 -1.161090088
32          -0.8871342828 0.010206103 -0.903857461 -0.887163447 -0.870311489
33          -0.5915914628 0.007457800 -0.603822446 -0.591609893 -0.579296873
34          -0.2957330029 0.005127435 -0.304160852 -0.295737334 -0.287289820
35           0.0001788989 0.004084281 -0.006541255  0.000178892  0.006899725
36           0.2959117648 0.005131833  0.287461312  0.295917587  0.304344594
37           0.5914673742 0.007463945  0.579167729  0.591484507  0.603710124
38           0.8871510114 0.010209729  0.870317443  0.887180667  0.903883246
39           1.1826854674 0.013074022  1.161135539  1.182725257  1.204100180
40           1.4784717198 0.015963019  1.452155999  1.478525909  1.504600265
41           1.7744619127 0.019077521  1.742996492  1.774533562  1.805678321
42           2.0701078771 0.022183987  2.033520310  2.070190292  2.106406247
43           2.3658004178 0.025240938  2.324168230  2.365894916  2.407096873
44           2.6615472398 0.028372269  2.614748926  2.661653949  2.707965595
45           2.9572731862 0.031476055  2.905354054  2.957391976  3.008767660
46           3.2530002749 0.034573217  3.195970823  3.253131324  3.309559660
                     mode          kld
(Intercept)  0.0971022036 2.613795e-08
1           -2.2738076494 6.445994e-08
2           -1.4677327409 1.828843e-08
3           -0.6656752876 2.721599e-09
4            0.1468118580 1.113733e-08
5            0.9468931865 3.401036e-09
6            0.8086064717 1.293377e-08
7            0.2500256681 3.062742e-09
8           -0.7819750989 9.362879e-09
9           -1.3329429160 1.191005e-08
10          -0.9293105560 4.631693e-09
11          -0.2104791592 7.424964e-09
12           0.6150746262 1.103412e-08
13           1.1013822946 9.413632e-10
14           0.4552892970 1.548067e-08
15          -0.1683681293 1.674451e-09
16          -1.0021688667 8.771714e-09
17          -1.3229850995 1.027095e-08
18          -0.7196891810 4.769361e-09
19           0.1417236500 7.747022e-09
20           0.7153177901 6.880338e-09
21           1.3021524311 6.129606e-09
22           1.8943877642 2.018923e-09
23           2.4843324341 2.214477e-08
24          -3.2533865702 1.790948e-09
25          -2.9576231661 1.836281e-09
26          -2.6619067128 1.847722e-09
27          -2.3663419199 1.777926e-09
28          -2.0703040222 1.979646e-09
29          -1.7745911265 2.188824e-09
30          -1.4787523633 2.491610e-09
31          -1.1827685235 3.173948e-09
32          -0.8872200959 3.982523e-09
33          -0.5916458359 4.599787e-09
34          -0.2957458951 2.000509e-09
35           0.0001789198 5.474070e-10
36           0.2959289578 1.900127e-09
37           0.5915177843 6.616747e-09
38           0.8872382636 7.811194e-09
39           1.1828024602 7.377957e-09
40           1.4786311513 7.043738e-09
41           1.7746729110 7.258024e-09
42           2.0703505195 7.122865e-09
43           2.3660786176 6.973030e-09
44           2.6618614130 6.935939e-09
45           2.9576229322 6.875914e-09
46           3.2533861161 6.827412e-09
> predz = component_plus_residual(rs2)
> predx = component_plus_residual(rs2, k=2)
> 
> # smooth(z) + linear(x)
> mydata = data.frame(y = y, z= z)
> data.linear = data.frame(x = x - mean(x))
> # make sure fixed (quantitative) predictors have mean 0 
> # for component_plus_residual to have a meaningful response scale
> hyperGumbel = list(prec = list(prior="pc.prec", param=c(U=1/0.31,alpha=0.01)))
> rs = smooth_inla(mydata, data.linear = data.linear)
y ~ -1 + f(idx0, model = "iid", hyper = hyper.fixed, constr = FALSE) + 
    f(idx1, model = "generic", Cmatrix = basisP[[1]]$P, constr = TRUE, 
        hyper = hyperB[[1]], diagonal = 1e-04)
<environment: 0x0000000013701340>
> mod = rs$model # inla object 
> mod$summary.random$idx0
  ID      mean         sd  0.05quant  0.5quant 0.95quant      mode          kld
1  1 0.1391274 0.16385583 -0.1270116 0.1374353 0.4112177 0.1344235 4.674929e-11
2  2 5.0616607 0.05368854  4.9729300 5.0619372 5.1494215 5.0624655 3.081325e-12
> coef(rs)  # intercept, linear coefs, B-spline coefs.
                  mean         sd   0.05quant   0.5quant   0.95quant       mode
(Intercept)  0.1391920 0.16386598 -0.12652883  0.1374658  0.41110826  0.1344167
1            5.0616627 0.05353362  4.97323373  5.0619420  5.14908876  5.0624707
2           -2.2310020 1.60247180 -4.82823560 -2.2472735  0.42520428 -2.2753716
3           -1.4469068 0.76891247 -2.69526269 -1.4542756 -0.17224218 -1.4673246
4           -0.6625024 0.23915754 -1.05388699 -0.6632636 -0.26846698 -0.6646714
5            0.1366595 0.22917640 -0.24622804  0.1404353  0.50623579  0.1474397
6            0.9471801 0.17849398  0.65492548  0.9466999  1.24106182  0.9458337
7            0.7995508 0.19442485  0.47421743  0.8030594  1.11246570  0.8094994
8            0.2491195 0.18414012 -0.05304128  0.2491082  0.55141808  0.2490899
9           -0.7871391 0.18686577 -1.09714997 -0.7852760 -0.48370966 -0.7818680
10          -1.3387371 0.19076997 -1.65595974 -1.3364128 -1.02963911 -1.3321146
11          -0.9318292 0.18450941 -1.23567007 -0.9312344 -0.63005848 -0.9301609
12          -0.2140806 0.18497895 -0.51995743 -0.2127804  0.08728742 -0.2104011
13           0.6090257 0.18633351  0.29920421  0.6113004  0.91087422  0.6154787
14           1.1019210 0.18585130  0.79827711  1.1011183  1.40838828  1.0996389
15           0.4464248 0.18964594  0.12866560  0.4500178  0.75153306  0.4567328
16          -0.1685831 0.18471342 -0.47103274 -0.1689305  0.13511099 -0.1695692
17          -1.0076497 0.18612813 -1.31637162 -1.0058246 -0.70535712 -1.0024961
18          -1.3272201 0.18539292 -1.63464775 -1.3254780 -1.02597083 -1.3222529
19          -0.7236691 0.18617543 -1.03147761 -0.7223606 -0.42053576 -0.7200048
20           0.1391367 0.17951646 -0.15667131  0.1397390  0.43275165  0.1408501
21           0.7093287 0.22414324  0.33751999  0.7115432  1.07335376  0.7156323
22           1.3018959 0.23934102  0.90884696  1.3019695  1.69477799  1.3021191
23           1.9010995 0.76590534  0.64954425  1.8984736  3.16246316  1.8938144
24           2.5004497 1.59712687 -0.10592639  2.4938739  5.12987440  2.4825113
                     kld
(Intercept) 2.231717e-07
1           8.742939e-10
2           3.386788e-07
3           2.012380e-07
4           3.377226e-08
5           5.520560e-09
6           3.767031e-08
7           4.658589e-09
8           4.570223e-08
9           1.292617e-08
10          5.191469e-09
11          3.726949e-08
12          2.065838e-08
13          7.065150e-09
14          7.029093e-08
15          1.118026e-10
16          5.984908e-08
17          1.488240e-08
18          8.894595e-09
19          4.024625e-08
20          1.614251e-08
21          1.938907e-08
22          1.726547e-08
23          1.429949e-07
24          2.995873e-07
> pred = component_plus_residual(rs)
> # currently no plots available for linear terms...
> 
> # smooth(z) only...
> mydataz = data.frame(y = y, z= z)
> rs3 = smooth_inla(mydataz)
y ~ -1 + f(idx0, model = "iid", hyper = hyper.fixed, constr = FALSE) + 
    f(idx1, model = "generic", Cmatrix = basisP[[1]]$P, constr = TRUE, 
        hyper = hyperB[[1]], diagonal = 1e-04)
<environment: 0x0000000014a1eec8>
> pred3 = component_plus_residual(rs3)
> 
> # smooth(z) only with little smoothing
> mydataz = data.frame(y = y, z= z)
> rs4 = smooth_inla(mydataz,   lambda = 0.001)
y ~ -1 + f(idx0, model = "iid", hyper = hyper.fixed, constr = FALSE) + 
    f(idx1, model = "generic", Cmatrix = basisP[[1]]$P, constr = TRUE, 
        hyper = hyperB[[1]], diagonal = 1e-04)
<environment: 0x00000000155c2608>
> pred4 = component_plus_residual(rs4)
> 
> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
   3.21    1.85    8.58 
